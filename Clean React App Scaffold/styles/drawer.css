/* === Enhanced Drawer Layout System === */

/* Drawer container */
.adsm-drawer {
  width: var(--adsm-drawer-width);
  max-width: 100vw;
  background: var(--color-panel);
  color: var(--color-text);
  border-left: 1px solid var(--adsm-drawer-border);
  border-radius: var(--adsm-drawer-radius) 0 0 var(--adsm-drawer-radius);
  display: flex;
  flex-direction: column;
  height: 100vh;
  overflow: hidden;
}

/* Sticky header */
.adsm-drawer-header {
  position: sticky;
  top: 0;
  z-index: 2;
  height: var(--adsm-drawer-header-h);
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 calc(var(--adsm-drawer-pad) + 4px);
  background: var(--color-panel);
  border-bottom: 1px solid var(--adsm-drawer-border);
  flex-shrink: 0;
}

.adsm-drawer-header h2 {
  margin: 0;
  font-size: 18px;
  font-weight: 600;
  color: var(--color-text);
}

.adsm-drawer-header .meta {
  font-size: 12px;
  color: var(--color-muted-foreground);
  margin-top: 2px;
}

/* Tabs bar (separate sticky row) */
.adsm-drawer-tabs {
  position: sticky;
  top: var(--adsm-drawer-header-h);
  z-index: 1;
  height: var(--adsm-drawer-tabs-h);
  display: flex;
  gap: 8px;
  align-items: center;
  padding: 0 var(--adsm-drawer-pad);
  background: var(--color-panel);
  border-bottom: 1px solid var(--adsm-drawer-border);
  flex-shrink: 0;
}

/* Scrollable content body with correct offset */
.adsm-drawer-body {
  /* subtract sticky header + tabs heights */
  height: calc(100vh - var(--adsm-drawer-header-h) - var(--adsm-drawer-tabs-h));
  overflow: auto;
  padding: var(--adsm-drawer-pad);
  display: grid;
  row-gap: var(--adsm-drawer-gap);
  flex: 1;
  /* Ensure focus rings aren't clipped */
  scroll-padding: 8px;
}

/* Ensure focus rings don't get clipped when scrolling */
.adsm-drawer-body:focus-within {
  outline: none;
}

.adsm-drawer-body > * {
  /* Add some breathing room around focusable elements */
  margin: 4px;
}

.adsm-drawer-body > *:focus-visible {
  /* Ensure focus rings have space */
  margin: 8px;
}

/* === Enhanced Form Controls with High-Contrast Tokens === */
.adsm-input,
.adsm-select,
.adsm-textarea {
  background-color: var(--input-bg);
  color: var(--input-text);
  border: 1px solid var(--input-border);
  border-radius: var(--radius-md);
  padding: 10px 12px;
  font-size: 14px;
  font-family: inherit;
  transition: all 0.2s ease;
  width: 100%;
  /* Ensure minimum touch target size */
  min-height: 44px;
}

.adsm-input::placeholder,
.adsm-textarea::placeholder {
  color: var(--input-placeholder);
  opacity: 1;
}

.adsm-select {
  appearance: none;
  background-image: none; /* never use external bg images */
  cursor: pointer;
  /* Add simple text arrow using CSS content */
  position: relative;
}

/* Add dropdown arrow using pseudo-element instead of background image */
.adsm-select::after {
  content: 'â–¼';
  position: absolute;
  right: 12px;
  top: 50%;
  transform: translateY(-50%);
  pointer-events: none;
  color: var(--input-text);
  font-size: 12px;
}

.adsm-textarea {
  min-height: 80px;
  resize: vertical;
  line-height: 1.5;
}

/* Focus states with proper contrast */
.adsm-input:focus,
.adsm-select:focus,
.adsm-textarea:focus {
  outline: none;
  border-color: var(--input-focus-border);
  box-shadow: 0 0 0 3px color-mix(in srgb, var(--color-accent) 30%, transparent);
  background-color: var(--input-bg); /* Ensure background stays consistent */
}

/* Disabled states */
.adsm-input:disabled,
.adsm-select:disabled,
.adsm-textarea:disabled {
  background-color: var(--input-disabled-bg);
  color: var(--input-disabled-text);
  border-color: var(--input-border);
  cursor: not-allowed;
  opacity: 0.7;
}

/* Hover states for better feedback */
.adsm-input:not(:disabled):hover,
.adsm-select:not(:disabled):hover,
.adsm-textarea:not(:disabled):hover {
  border-color: var(--input-focus-border);
}

/* Close button hit area + z-index (prevents overlap bugs) */
.adsm-drawer-close {
  width: 36px; 
  height: 36px;
  display: grid; 
  place-items: center;
  border-radius: 10px;
  background: color-mix(in srgb, var(--color-bg) 70%, transparent);
  border: 1px solid var(--adsm-drawer-border);
  cursor: pointer;
  color: var(--color-text);
  font-size: 16px;
  font-weight: 600;
  transition: all 0.2s ease;
  flex-shrink: 0;
}

.adsm-drawer-close:hover {
  background: var(--color-muted);
}

.adsm-drawer-close:focus-visible {
  outline: 3px solid var(--color-accent);
  outline-offset: 2px;
}

/* Backdrop overlay */
.adsm-drawer-backdrop {
  position: fixed;
  inset: 0;
  background: rgba(0, 0, 0, 0.5);
  z-index: var(--z-drawer);
  display: flex;
  justify-content: flex-end;
  align-items: stretch;
}

/* Responsive drawer width */
@media (max-width: 768px) {
  .adsm-drawer {
    width: 100vw;
    max-width: 100vw;
    border-radius: 0;
  }
}

@media (max-width: 1200px) {
  .adsm-drawer {
    width: min(var(--adsm-drawer-width), 50vw);
  }
}

/* Enhanced accessibility for drawer navigation with WCAG AA compliance */
.adsm-drawer-tabs[role="tablist"] {
  /* Ensure proper tab order */
  display: flex;
  gap: 8px;
}

.adsm-drawer-tabs [role="tab"] {
  /* Override global tab styles for drawer-specific behavior with enhanced contrast */
  min-width: fit-content;
  white-space: nowrap;
  text-align: center;
  flex: 1;
  max-width: none;
  /* Enhanced text contrast for better readability */
  color: var(--tab-inactive-fg);
  background: var(--tab-inactive-bg);
  border: 2px solid transparent;
  transition: all 0.2s ease;
  font-weight: 500;
}

.adsm-drawer-tabs [role="tab"]:hover {
  /* Enhanced hover state for better feedback */
  background: var(--tab-hover-bg);
  color: var(--color-text); /* Use stronger text color on hover */
}

.adsm-drawer-tabs [role="tab"][aria-selected="true"] {
  /* Enhanced active state with high contrast */
  color: var(--tab-active-fg);
  background: var(--tab-active-bg);
  font-weight: 600;
  border-color: color-mix(in srgb, var(--tab-active-fg) 20%, transparent);
}

.adsm-drawer-tabs [role="tab"]:focus-visible {
  /* Ensure focus is visible in tab context */
  outline: 3px solid var(--color-ring) !important;
  outline-offset: 2px !important;
  z-index: 1;
  position: relative;
}

/* Panel content styling */
.adsm-drawer-body [role="tabpanel"] {
  /* Remove any default margins that might interfere with grid layout */
  margin: 0;
  /* Ensure panels take full available space */
  min-height: 0;
}

/* Section cards inside drawer */
.adsm-drawer-body .adsm-section {
  /* Override margin set by parent grid */
  margin: 0;
}

/* Ensure proper spacing in Preview sections */
.adsm-drawer-body .preview-section {
  display: grid;
  gap: var(--adsm-drawer-gap);
}

.adsm-drawer-body .preview-section h4 {
  margin: 0 0 8px 0;
  font-size: 16px;
  font-weight: 600;
  color: var(--color-text);
}

/* Properties editor styling within drawer */
.adsm-drawer-body .props-editor {
  padding: 16px;
  background: var(--color-bg);
  border: 1px solid var(--adsm-drawer-border);
  border-radius: var(--adsm-drawer-radius);
}

/* Enhanced form field groups for better layout */
.adsm-field-group {
  display: grid;
  gap: 8px;
  margin-bottom: 16px;
}

.adsm-field-label {
  font-size: 14px;
  font-weight: 600;
  color: var(--color-text);
  margin-bottom: 4px;
}

.adsm-field-hint {
  font-size: 12px;
  color: var(--color-muted-foreground);
  margin-top: 4px;
  line-height: 1.4;
}

/* Button styling within drawer */
.adsm-drawer-body .adsm-button {
  background: var(--color-primary);
  color: var(--color-primary-foreground);
  border: none;
  border-radius: var(--radius-md);
  padding: 10px 16px;
  font-size: 14px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
  min-height: 40px;
}

.adsm-drawer-body .adsm-button:hover:not(:disabled) {
  background: var(--color-primary);
  opacity: 0.9;
}

.adsm-drawer-body .adsm-button:focus-visible {
  outline: 3px solid var(--color-ring);
  outline-offset: 2px;
}

.adsm-drawer-body .adsm-button:disabled {
  background: var(--input-disabled-bg);
  color: var(--input-disabled-text);
  cursor: not-allowed;
}

/* Metadata display styling with enhanced contrast */
.adsm-drawer-metadata {
  margin-top: 24px;
  padding-top: 20px;
  border-top: 2px solid var(--adsm-drawer-border);
}

.adsm-drawer-metadata-grid {
  display: grid;
  grid-template-columns: 1fr 1fr; /* Fixed CSS property syntax */
  gap: 16px;
  font-size: 14px; /* Fixed CSS property syntax */
  margin-bottom: 16px; /* Fixed CSS property syntax */
}

.adsm-drawer-metadata-item {
  /* Use high-contrast text color with proper background */
  color: var(--color-text);
  background: transparent;
  padding: 8px 0;
  line-height: 1.5;
}

.adsm-drawer-metadata-item strong {
  /* Ensure labels have sufficient contrast */
  color: var(--color-text);
  font-weight: 600;
}

.adsm-drawer-metadata-item code {
  /* Enhanced contrast for ID display */
  font-size: 12px;
  background: var(--color-muted);
  color: var(--color-text); /* Use main text color instead of relying on background contrast */
  padding: 4px 8px;
  border-radius: 4px;
  border: 1px solid var(--color-border);
  font-family: ui-monospace, SFMono-Regular, Menlo, Consolas, monospace;
}

/* Tags and dependencies styling with WCAG AA accessibility */
.adsm-drawer-tags {
  margin-top: 16px;
}

.adsm-drawer-tags h4 {
  margin: 0 0 8px 0;
  font-size: 16px;
  font-weight: 600;
  color: var(--color-text);
}

.adsm-drawer-tags-list {
  display: flex;
  flex-wrap: wrap;
  gap: 8px;
}

.adsm-drawer-tag {
  padding: 6px 12px;
  /* Use semantic chip tokens for proper contrast */
  background: var(--chip-bg);
  color: var(--chip-text);
  border: 1px solid var(--chip-border);
  border-radius: var(--radius-md);
  font-size: 12px;
  font-weight: 500;
  display: inline-flex;
  align-items: center;
  transition: all 0.2s ease;
  /* Ensure minimum touch target size for accessibility */
  min-height: 32px;
  min-width: 32px;
  box-sizing: border-box;
}

.adsm-drawer-tag:hover {
  background: var(--chip-hover);
  cursor: default;
}

.adsm-drawer-tag:focus-visible {
  outline: 3px solid var(--color-ring) !important;
  outline-offset: 2px !important;
}

.adsm-drawer-dependency {
  padding: 6px 12px;
  /* Use differentiated but accessible colors for dependencies */
  background: var(--info-bg);
  color: var(--info-text);
  border: 1px solid var(--info-border);
  border-radius: var(--radius-md);
  font-size: 12px;
  font-weight: 500;
  display: inline-flex;
  align-items: center;
  transition: all 0.2s ease;
  /* Ensure minimum touch target size for accessibility */
  min-height: 32px;
  min-width: 32px;
  box-sizing: border-box;
}

.adsm-drawer-dependency:hover {
  /* Slightly darker for hover state */
  background: color-mix(in srgb, var(--info-bg) 85%, var(--info-border));
  cursor: default;
}

.adsm-drawer-dependency:focus-visible {
  outline: 3px solid var(--color-ring) !important;
  outline-offset: 2px !important;
}

/* JSON display styling */
.adsm-drawer-json {
  background: var(--color-bg);
  border: 2px solid var(--adsm-drawer-border);
  border-radius: var(--adsm-drawer-radius);
  overflow: hidden;
}

.adsm-drawer-json pre {
  padding: 20px;
  font-size: 13px;
  line-height: 1.5;
  overflow-x: auto;
  color: var(--color-text);
  font-family: 'Monaco', 'Consolas', 'Liberation Mono', 'Courier New', monospace;
  margin: 0;
  background: transparent;
  /* Allow focus for keyboard users */
  outline: none;
}

.adsm-drawer-json pre:focus-visible {
  outline: 3px solid var(--color-ring) !important;
  outline-offset: -3px !important;
}

/* Notes section styling with enhanced readability */
.adsm-drawer-notes {
  padding: 20px;
  background: var(--color-bg);
  border: 2px solid var(--adsm-drawer-border);
  border-radius: var(--adsm-drawer-radius);
  line-height: 1.6;
  min-height: 160px;
}

.adsm-drawer-notes-content {
  white-space: pre-wrap;
  color: var(--color-text);
  font-size: 14px;
  line-height: 1.6;
  word-wrap: break-word;
  /* Ensure readability with proper contrast */
  background: transparent;
}

.adsm-drawer-notes-empty {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 120px;
  /* Enhanced contrast for empty state */
  color: var(--color-text);
  opacity: 0.6; /* Use opacity instead of muted color token */
  font-size: 16px;
  font-style: italic;
  text-align: center;
  background: color-mix(in srgb, var(--color-muted) 20%, transparent);
  border: 2px dashed var(--color-border);
  border-radius: 8px;
  margin: 8px 0;
}

/* Props specification display with enhanced accessibility */
.adsm-drawer-props-spec {
  padding: 20px;
  background: var(--color-bg);
  border: 2px solid var(--adsm-drawer-border);
  border-radius: var(--adsm-drawer-radius);
}

.adsm-drawer-props-spec-grid {
  display: grid;
  gap: 16px;
}

.adsm-drawer-props-spec-item {
  padding: 16px;
  background: var(--color-panel);
  border: 1px solid var(--adsm-drawer-border);
  border-radius: 8px;
  /* Ensure sufficient contrast between item background and parent */
  box-shadow: 0 1px 3px color-mix(in srgb, var(--color-border) 20%, transparent);
}

.adsm-drawer-props-spec-name {
  font-size: 16px;
  font-weight: 600;
  color: var(--color-text);
  margin-bottom: 8px;
  line-height: 1.4;
}

.adsm-drawer-props-spec-required {
  /* High-contrast required indicator */
  color: var(--color-destructive);
  margin-left: 4px;
  font-weight: 700;
  font-size: 18px;
}

.adsm-drawer-props-spec-meta {
  font-size: 14px;
  /* Enhanced contrast for metadata */
  color: var(--color-text); /* Use main text color instead of muted */
  opacity: 0.8; /* Subtle opacity instead of relying on muted color */
  margin-bottom: 8px;
  display: grid;
  gap: 4px;
  line-height: 1.4;
}

.adsm-drawer-props-spec-meta strong {
  /* Ensure labels within meta are visible */
  color: var(--color-text);
  opacity: 1;
  font-weight: 600;
}

.adsm-drawer-props-spec-description {
  font-size: 14px;
  color: var(--color-text);
  line-height: 1.5;
  margin-bottom: 8px;
}

.adsm-drawer-props-spec-options {
  font-size: 13px;
  /* Enhanced contrast for options display */
  color: var(--color-text);
  background: var(--info-bg); /* Use info background for better differentiation */
  border: 1px solid var(--info-border);
  padding: 8px 12px;
  border-radius: 6px;
  line-height: 1.4;
}

.adsm-drawer-props-spec-options strong {
  color: var(--color-text);
  font-weight: 600;
}

/* Empty state styling with enhanced accessibility */
.adsm-drawer-empty {
  padding: 32px;
  background: color-mix(in srgb, var(--color-muted) 30%, transparent);
  border: 2px dashed var(--adsm-drawer-border);
  border-radius: var(--adsm-drawer-radius);
  text-align: center;
  /* Enhanced contrast for empty states */
  color: var(--color-text);
  opacity: 0.7; /* Use opacity instead of muted color for better control */
  font-size: 16px;
  line-height: 1.4;
  /* Add icon or visual indicator */
  position: relative;
}

.adsm-drawer-empty::before {
  content: "ðŸ“­";
  display: block;
  font-size: 24px;
  margin-bottom: 8px;
  opacity: 0.6;
}

/* Animation for drawer entrance */
@media (prefers-reduced-motion: no-preference) {
  .adsm-drawer {
    animation: slideInFromRight 0.3s ease-out;
  }
  
  @keyframes slideInFromRight {
    from {
      transform: translateX(100%);
    }
    to {
      transform: translateX(0);
    }
  }
}

/* High contrast mode adjustments */
@media (prefers-contrast: high) {
  .adsm-drawer {
    border-left-width: 3px;
  }
  
  .adsm-drawer-header,
  .adsm-drawer-tabs {
    border-bottom-width: 2px;
  }
  
  .adsm-section,
  .adsm-drawer-json,
  .adsm-drawer-notes,
  .adsm-drawer-props-spec {
    border-width: 3px;
  }
  
  .adsm-input,
  .adsm-select,
  .adsm-textarea {
    border-width: 2px;
  }
  
  .adsm-input:focus,
  .adsm-select:focus,
  .adsm-textarea:focus {
    box-shadow: 0 0 0 4px color-mix(in srgb, var(--color-accent) 40%, transparent);
  }
}

/* Dark theme specific adjustments */
@media (prefers-color-scheme: dark) {
  .adsm-drawer-backdrop {
    background: rgba(0, 0, 0, 0.7);
  }
}

/* Print styles - hide drawer */
@media print {
  .adsm-drawer-backdrop,
  .adsm-drawer {
    display: none !important;
  }
}